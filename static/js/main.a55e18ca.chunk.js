(this.webpackJsonpsorting_algos=this.webpackJsonpsorting_algos||[]).push([[0],[,,,,,function(e,t,a){},,,,,function(e,t,a){e.exports=a(18)},,,,,function(e,t,a){},function(e,t,a){e.exports=a.p+"static/media/logo.5d5d9eef.svg"},function(e,t,a){},function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),o=a(1),s=a.n(o),l=(a(15),a(16),a(17),a(2)),i=a(6),c=a(7),u=a(3),m=a(9),h=a(8);a(5);function d(e){var t=[];if(e.length<=1)return e;var a=e.slice();return function e(t,a,n,r,o){if(a===n)return;var s=Math.floor((a+n)/2);e(r,a,s,t,o),e(r,s+1,n,t,o),function(e,t,a,n,r,o){var s=t,l=a+1,i=t;for(;s<=a&&l<=n;)o.push([s,l]),o.push([s,l]),r[s]<r[l]?(o.push([i,r[s]]),e[i]=r[s],i++,s++):(o.push([i,r[l]]),e[i]=r[l],i++,l++);for(;s<=a;)o.push([s,s]),o.push([s,s]),o.push([i,r[s]]),e[i]=r[s],i++,s++;for(;l<=n;)o.push([l,l]),o.push([l,l]),o.push([i,r[l]]),e[i]=r[l],i++,l++}(t,a,s,n,r,o)}(e,0,e.length-1,a,t),t}var g=function(e){Object(m.a)(a,e);var t=Object(h.a)(a);function a(e){var n;return Object(i.a)(this,a),(n=t.call(this,e)).state={array:[],running:!1,speed:20,algo:0},n.handleChange=n.handleChange.bind(Object(u.a)(n)),n}return Object(c.a)(a,[{key:"componentDidMount",value:function(){this.newArray(100),this.initialSpeed()}},{key:"handleChange",value:function(e){this.props.newArray;this.newArray(Math.floor(1.65*(parseInt(e.target.value)+3)));this.state.array}},{key:"insertionSort",value:function(e){var t=this,a=r.a.createElement("div",null,"Insertion Sort");s.a.render(a,document.getElementById("Algo-name"));var n=r.a.createElement("div",null,"Insertion Sort is a simple sorting algorithm that builds the final sorted list by transferring one element at a time.");s.a.render(n,document.getElementById("text"));var o=function(e){for(var t=[],a=1;a<e.length;a++){t.push([a,a,0]),t.push([a,a,-1]);for(var n=e[a],r=a-1;r>=0&&e[r]>n;)t.push([r,r,0]),t.push([r,r,-1]),t.push([r+1,e[r],-2]),e[r+1]=e[r],r--;t.push([r+1,n,-2]),e[r+1]=n}return t}(this.state.array.slice()),i=r.a.createElement("div",null,r.a.createElement("div",null,"Worst-case time complexity:     O(n^2) "),r.a.createElement("div",null,"Average time complexity:     O(n^2) "),r.a.createElement("div",null,"Best-case time complexity:     O(n)  "));s.a.render(i,document.getElementById("time"));for(var c=function(e){var a=document.getElementsByClassName("array-bars"),n=Object(l.a)(o[e],3),r=n[0],s=n[1],i=n[2];0===i?setTimeout((function(){a[r].style.backgroundColor="#ff8c00"}),e*t.state.speed):-1===i?setTimeout((function(){a[r].style.backgroundColor="#b34cf4"}),e*t.state.speed):setTimeout((function(){a[r];var e=a[r].style;e.height="".concat(s,"px"),a[r].value=0,e.backgroundColor="#b34cf4"}),e*t.state.speed)},u=0;u<o.length;u++)c(u)}},{key:"bubbleSort",value:function(e){var t=this,a=r.a.createElement("div",null,"Bubble Sort");s.a.render(a,document.getElementById("Algo-name"));var n=r.a.createElement("div",null,"Bubble Sort is a simple sorting algorithm that repeatedly goes through the list, compares two adjacent elements and swaps them if they are in the wrong order.This process repeats until the list is sorted.  The algorithm is simple, however it is too slow and very inefficient for most problems.");s.a.render(n,document.getElementById("text"));var o=function(e){for(var t=[],a=0;a<e.length-1;a++)for(var n=0;n<e.length-1-a;n++)if(t.push([n,n+1]),t.push([n,n+1]),e[n]>e[n+1]){var r=e[n];e[n]=e[n+1],e[n+1]=r,t.push([n,e[n]]),t.push([n+1,e[n+1]])}else t.push([n,e[n]]),t.push([n+1,e[n+1]]);return t}(this.state.array.slice()),i=r.a.createElement("div",null,r.a.createElement("div",null,"Worst-case time complexity:     O(n^2) "),r.a.createElement("div",null,"Average time complexity:     O(n^2) "),r.a.createElement("div",null,"Best-case time complexity:     O(n)  "));s.a.render(i,document.getElementById("time"));for(var c=function(e){var a=document.getElementsByClassName("array-bars");e%4===0?setTimeout((function(){var t=Object(l.a)(o[e],2),n=t[0],r=t[1],s=a[n].style,i=a[r].style;s.backgroundColor="#ff8c00",i.backgroundColor="#ff8c00"}),e*t.state.speed):e%4===1?setTimeout((function(){var t=Object(l.a)(o[e],2),n=t[0],r=t[1],s=a[n].style,i=a[r].style;s.backgroundColor="#b34cf4",i.backgroundColor="#b34cf4"}),e*t.state.speed):setTimeout((function(){var t=Object(l.a)(o[e],2),n=t[0],r=t[1],s=a[n].style;s.height="".concat(r,"px"),s.backgroundColor="#b34cf4"}),e*t.state.speed)},u=0;u<o.length;u++)c(u)}},{key:"mergeSort",value:function(e){var t=this,a=r.a.createElement("div",null,"Merge Sort");s.a.render(a,document.getElementById("Algo-name"));var n=r.a.createElement("div",null,"Merge Sort is a Divide and Conquer algorithm. It divides input array in two halves, calls itself for the two halves and then merges the two sorted halves.Merge sort is an efficient and stable sorting algorithm.");s.a.render(n,document.getElementById("text"));var o=r.a.createElement("div",null,r.a.createElement("div",null,"Worst-case time complexity:     O(n log n) "),r.a.createElement("div",null,"Average time complexity:     O(n log n) "),r.a.createElement("div",null,"Best-case time complexity:     O(n log n)  "));s.a.render(o,document.getElementById("time"));for(var i=d(this.state.array.slice()),c=function(e){var a=document.getElementsByClassName("array-bars");if(e%3!==2){var n=Object(l.a)(i[e],2),r=n[0],o=n[1],s=a[r].style,c=a[o].style;e%3===0?setTimeout((function(){s.backgroundColor="#ff8c00",c.backgroundColor="#ff8c00"}),e*t.state.speed):setTimeout((function(){s.backgroundColor="#b34cf4",c.backgroundColor="#b34cf4"}),e*t.state.speed)}else setTimeout((function(){var t=Object(l.a)(i[e],2),n=t[0],r=t[1];a[n].style.height="".concat(r,"px")}),e*t.state.speed)},u=0;u<i.length;u++)c(u)}},{key:"selectionSortChoose",value:function(){this.setState({algo:1})}},{key:"mergeSortChoose",value:function(){this.setState({algo:2})}},{key:"insertionSortChoose",value:function(){this.setState({algo:3})}},{key:"bubbleSortChoose",value:function(){this.setState({algo:4})}},{key:"selectionSort",value:function(e){var t=this,a=function(e){for(var t=[],a=0;a<e.length;a++){for(var n=a,r=a+1;r<e.length;r++)e[r]<e[n]&&(n=r);t.push([a,n]),t.push([a,n]),t.push([a,e[n]]),t.push([n,e[a]]);var o=e[n];e[n]=e[a],e[a]=o}return t}(this.state.array.slice()),n=r.a.createElement("div",null,"Selection Sort");s.a.render(n,document.getElementById("Algo-name"));var o=r.a.createElement("div",null,"Selection Sort is a simple sorting in-place comparison-based algorithm. The list is divided into two parts, the sorted part at the left end and the unsorted part at the right end. Initially, the sorted part is empty and the unsorted part is the entire list. The smallest element is selected from the unsorted array and swapped with the leftmost element, and that element becomes a part of the sorted array. This process continues moving unsorted array boundary by one element to the right. ");s.a.render(o,document.getElementById("text"));var i=r.a.createElement("div",null,r.a.createElement("div",null,"Worst-case time complexity:     O(n^2) "),r.a.createElement("div",null,"Average time complexity:     O(n^2) "),r.a.createElement("div",null,"Best-case time complexity:     O(n^2)  "));s.a.render(i,document.getElementById("time"));for(var c=function(e){var n=document.getElementsByClassName("array-bars");if(e%4===0)setTimeout((function(){var t=Object(l.a)(a[e],2),r=t[0],o=t[1],s=n[r].style,i=n[o].style;s.backgroundColor="#ff8c00",i.backgroundColor="#ff8c00"}),e*t.state.speed);else if(e%4===1)setTimeout((function(){var t=Object(l.a)(a[e],2),r=t[0],o=t[1],s=n[r].style,i=n[o].style;s.backgroundColor="#b34cf4",i.backgroundColor="#b34cf4"}),e*t.state.speed);else{var r=Object(l.a)(a[e],2),o=r[0],s=r[1],i=n[o].style;setTimeout((function(){i.backgroundColor="#ff8c00",i.height="".concat(s,"px")}),e*t.state.speed),setTimeout((function(){i.backgroundColor="#b34cf4"}),e*t.state.speed)}},u=0;u<a.length;u++)c(u)}},{key:"newArray",value:function(e){for(var t=[],a=0;a<e;a++){var n=Math.floor(591*Math.random()+10);t.push(n)}this.setState({array:t});var r=this.state.array.length<10?500:this.state.array.length<20?400:this.state.array.length<30?300:this.state.array.length<40?200:this.state.array.length<40?150:this.state.array.length<60?100:this.state.array.length<80?50:this.state.array.length<100?20:10;this.setState({speed:r}),console.log(this.state.speed)}},{key:"start",value:function(){1===this.state.algo&&this.selectionSort(),2===this.state.algo&&this.mergeSort(),3===this.state.algo&&this.insertionSort(),4===this.state.algo&&this.bubbleSort()}},{key:"initialSpeed",value:function(){this.setState({speed:20})}},{key:"abort",value:function(){window.location.reload(!1)}},{key:"render",value:function(){var e=this,t=this.state.array,a=(this.state.algo,Math.floor(window.innerWidth/(3*t.length))),n="".concat(a,"px"),o=t.length<5?10:t.length<8?8:t.length<11?6:t.length<20?4:t.length<50?3.5:t.length<100?3:t.length<130?2.5:2,s="".concat(o,"px");return r.a.createElement("div",{className:"body"},r.a.createElement("style",null,"body { background-color: #374750; }"),r.a.createElement("div",{className:"app-name"},"Sorting Algorithms Visualizer created with ",r.a.createElement("span",{class:"heart"})," and coffee by ",r.a.createElement("a",{className:"linkedin",href:"https://www.linkedin.com/in/dariabazueva/"},"Daria Bazueva")),r.a.createElement("div",{className:"menu"},r.a.createElement("input",{className:"slide",type:"range",id:"slide",min:"0",max:"50",onChange:this.handleChange}),r.a.createElement("button",{className:"generate",onClick:function(){return e.newArray(100)}}," Generate New Array "),r.a.createElement("button",{className:"selectionSort",onClick:function(){return e.selectionSortChoose()}},"Selection Sort"),r.a.createElement("button",{className:"mergeSort",onClick:function(){return e.mergeSortChoose()}}," Merge Sort"),r.a.createElement("button",{className:"bubbleSort",onClick:function(){return e.bubbleSortChoose()}},"Bubble Sort"),r.a.createElement("button",{className:"insertionSort",onClick:function(){return e.insertionSortChoose()}},"Insertion Sort"),r.a.createElement("button",{className:"start",onClick:function(){return e.start()}}," Sort "),r.a.createElement("button",{className:"abort",onClick:function(){return e.abort()}},"Abort")),r.a.createElement("div",{className:"graph"},t.map((function(e,t){return r.a.createElement("div",{className:"array-bars",key:t,style:{height:"".concat(e,"px"),width:n,marginLeft:s,marginRight:s,color:"transparent"}},e)}))),r.a.createElement("hr",{className:"first-line"}),r.a.createElement("div",{className:"info"},r.a.createElement("div",{id:"Algo-name",className:"Algo-name"},"Select Algorithm"),r.a.createElement("div",{id:"text",className:"text"}," I wanted to learn React as well as revise classic sorting algorithms for my interview prep. This app turned out to be the great way to achieve both objectives at once. It is a great tool to visualize the step-by-step process of performing sorting algorithms on unsorted list of values. You can generate new array and then perform any of sorting algorithms on it. "),r.a.createElement("div",{id:"complexity",className:"complexity"},"Time Complexity"),r.a.createElement("div",{id:"time",className:"time"},"Worst-case time complexity:      "),r.a.createElement("div",null,"Average time complexity:      "),r.a.createElement("div",null,"Best-case time complexity:       ")))}}]),a}(r.a.Component);var f=function(){return r.a.createElement(g,{className:"Visualizer"})};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(f,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}],[[10,1,2]]]);
//# sourceMappingURL=main.a55e18ca.chunk.js.map